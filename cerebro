#!/bin/bash

# Author: Da2dalus
# Description: Send anonymous text messages with TOR and the TextBelt API

#                    ____
#                 _.' :  `._                         ________________________________________
#             .-.'`.  ;   .'`.-.                    /                                        \
#    __      / : ___\ ;  /___ ; \      __          |  Inportant to stay anonymous, it is...   |
#  ,'_ ""--.:__;".-.";: :".-.":__;.--"" _`,        |                                  -Yoda   |
#  :' `.t""--.. '<@.`;_  ',@>` ..--""j.' `;        |  _______________________________________/
#       `:-.._J '-.-'L__ `-- ' L_..-;'              \/
#         "-.__ ;  .-"  "-.  : __.-"
#             L ' /.------.\ ' J
#              "-.   "--"   .-"
#             __.l"-:_JL_;-";.__
#          .-j/'.;  ;""""  / .'\"-.
#        .' /:`. "-.:     .-" .';  `.
#     .-"  / ;  "-. "-..-" .-"  :    "-.
#  .+"-.  : :      "-.__.-"      ;-._   \
#  ; \  `.; ;                    : : "+. ;
#  :  ;   ; ;                    : ;  : \:
# : `."-; ;  ;                  :  ;   ,/;
#  ;    -: ;  :                ;  : .-"'  :
#  :\     \  : ;             : \.-"      :
#   ;`.    \  ; :            ;.'_..--  / ;
#   :  "-.  "-:  ;          :/."      .'  :
#     \       .-`.\        /t-""  ":-+.   :
#      `.  .-"    `l    __/ /`. :  ; ; \  ;
#        \   .-" .-"-.-"  .' .'j \  /   ;/
#         \ / .-"   /.     .'.' ;_:'    ;
#          :-""-.`./-.'     /    `.___.'
#                \ `t  ._  /  bug :F_P:
#                 "-.t-._:'

# Colors and special caracters

# Reset
NC='\033[0m'       # Text Reset

BLINK=$(tput blink)

# Regular Colors
Black='\033[0;30m'        # Black
Red='\033[0;31m'          # Red
Green='\033[0;32m'        # Green
Yellow='\033[0;33m'       # Yellow
Blue='\033[0;34m'         # Blue
Purple='\033[0;35m'       # Purple
Cyan='\033[0;36m'         # Cyan
White='\033[0;37m'        # White

# Bold
BBlack='\033[1;30m'       # Black
BRed='\033[1;31m'         # Red
BGreen='\033[1;32m'       # Green
BYellow='\033[1;33m'      # Yellow
BBlue='\033[1;34m'        # Blue
BPurple='\033[1;35m'      # Purple
BCyan='\033[1;36m'        # Cyan
BWhite='\033[1;37m'       # White

# Underline
UBlack='\033[4;30m'       # Black
URed='\033[4;31m'         # Red
UGreen='\033[4;32m'       # Green
UYellow='\033[4;33m'      # Yellow
UBlue='\033[4;34m'        # Blue
UPurple='\033[4;35m'      # Purple
UCyan='\033[4;36m'        # Cyan
UWhite='\033[4;37m'       # White

# Background
On_Black='\033[40m'       # Black
On_Red='\033[41m'         # Red
On_Green='\033[42m'       # Green
On_Yellow='\033[43m'      # Yellow
On_Blue='\033[44m'        # Blue
On_Purple='\033[45m'      # Purple
On_Cyan='\033[46m'        # Cyan
On_White='\033[47m'       # White

# High Intensity
IBlack='\033[0;90m'       # Black
IRed='\033[0;91m'         # Red
IGreen='\033[0;92m'       # Green
IYellow='\033[0;93m'      # Yellow
IBlue='\033[0;94m'        # Blue
IPurple='\033[0;95m'      # Purple
ICyan='\033[0;96m'        # Cyan
IWhite='\033[0;97m'       # White

# Bold High Intensity
BIBlack='\033[1;90m'      # Black
BIRed='\033[1;91m'        # Red
BIGreen='\033[1;92m'      # Green
BIYellow='\033[1;93m'     # Yellow
BIBlue='\033[1;94m'       # Blue
BIPurple='\033[1;95m'     # Purple
BICyan='\033[1;96m'       # Cyan
BIWhite='\033[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\033[0;100m'   # Black
On_IRed='\033[0;101m'     # Red
On_IGreen='\033[0;102m'   # Green
On_IYellow='\033[0;103m'  # Yellow
On_IBlue='\033[0;104m'    # Blue
On_IPurple='\033[0;105m'  # Purple
On_ICyan='\033[0;106m'    # Cyan
On_IWhite='\033[0;107m'   # White

# List made by Shakiba Moshiri

# Check if program is running as root ------------------------------------

clear

if [ "$EUID" -ne 0 ]
then
   echo " "
   echo -e "$BRed Please run as root! $NC"
   echo " "
   exit
fi

# Banner and welcoming ----------------------------------------------------


function banner() {
   
   echo -e "$Green
  ─────────────────────────────────────────────────────────────────
  ──────────▄▄▄▄▄──────────────────────────────────────────────────
  ───────▄█████████▄───────────────────────────────────────────────
  ──────███▄─────▄███─$BLINK CEREBRO v2.5$NC $Green───────────────────────────────
  ─────▐██─▀█▄─▄█▀─██▌─────────────────────────────────────────────
  ─────▐█▌───▀█▀───▐█▌─────────────────────────────────────────────
  ─────▐█▌──▄█▀█▄──▐█▌─────────────────────────────────────────────
  ─────▐██▄█▀───▀█▄██▌─────────────────────────────────────────────
  ──────▀██▄▄▄▄▄▄▄██▀──────────────────────────────────────────────
  ────────▀▀█████▀▀────────────────────────────────────────────────
  ───────────────────────────────────────────────────────────────── $NC"
   
   echo " "
   echo -e "$BGreen Hello Professor... $NC"
   echo -e "$Green Welcome to Cerebro $NC"
   
   echo " "
   
   echo -e "$Green With Cerebro U can send, receive and check the $NC"
   echo -e "$Green status of text messages using the TextBelt API. $NC"
   echo -e "$Green Cerebro uses the TOR network to make you harder to trace. $NC"
   echo "  "
   
   sleep 1
   
   echo -e "$Green Let's begin... $NC"
   echo " "
   
   sleep 2

   read -n 1 -s -r -p " Press any key to continue"

   clear
}

# --------------------------------------------------------

function byemsg() {
   
   echo " "
   sudo killall -e tor
   echo "  "
   echo -e "$Green Done... $NC"
   sleep 1
   echo -e "$Green Closing Cerebro... $NC"
   sleep 1
   echo " "
   echo -e "$BGreen Bye Professor... $NC"
   echo " "
   exit
}

# ------------------------------------------------

function VERSION() {
   echo " "
   echo -e "$BGreen Cerebro version: v2.5"
   echo " "
}

# -----------------------------------

function DB() {
   echo -e "$Green
 ──────────────────────────────────────────────────
 --------- ### ───────────────────────────────
 -------- ##  # ──────────────────────────────────────
 ------- ##    # ─────────────────────────────────────────
 ------ ##      # ───────────────────────────────────
 ----- ##        # ──────────$BLINK DA2DALUS$NC $Green──────────
 ---- ##          # ───────────────── https://github.com/Da2dalus ─────
 --- ##            # ────────────────────────────────────────────────
 -- ##              # ──────────────────────────────────────────────────
 - ##                # ─────────────────────────────────────────────────────
  ##                  # ─────────────────────────────────────────
 ##                    # ──────────────────────────────────────────────────
 ####################### ────────────────────────────────────────────
 ─────────────────────────────────────────────────────────────────────────── $NC"
}

# ----------------------------------------------

function TOR() {
   
   echo "  "
   echo -e "$BGreen MAKING CONNECTION TO TOR NETWORK... $NC"
   sleep 2
   clear
   sleep 1
   echo "  "
   echo -e "$BGreen MAKING CONNECTION TO TOR NETWORK... $NC"
   echo " "
   echo -e "$Green [===>-------------------------] $NC"  
   sleep 1
   clear
   echo "  "
   echo -e "$BGreen MAKING CONNECTION TO TOR NETWORK... $NC"
   echo " "
   echo -e "$Green [==========>------------------] $NC"
   sleep 1
   clear
   echo "  "
   echo -e "$BGreen MAKING CONNECTION TO TOR NETWORK... $NC"
   echo " "
   echo -e "$Green [==================>----------] $NC"
   
   tor &
   
   sleep 1
   clear
   echo "  "
   echo -e "$BGreen MAKING CONNECTION TO TOR NETWORK... $NC"
   echo " "
   echo -e "$Green [=======================>-----] $NC"
   sleep 1
   clear
   echo "  "
   echo -e "$BGreen MAKING CONNECTION TO TOR NETWORK... $NC"
   echo " "
   echo -e "$Green [===========================>-] $NC"   
   sleep 1
   clear
   echo "  "
   echo -e "$BGreen CONNECTION TO TOR NETWORK MADE $NC"
   echo " "
   echo -e "$Green [============DONE=============] $NC"
   sleep 2
   clear

}

# ----------------------------------------------------------------

function update() {
   echo " "
   echo -e "$BGreen UPDATING... $NC"
   sleep 1
   clear
   echo -e "$BGreen DOWNLOADING NEWEST VERSION... $NC"
   echo " "
   echo -e "$Green [======>----------------------] $NC"
   echo " "
   
   sudo curl https://raw.githubusercontent.com/Da2dalus/CerebroSMS/main/cerebro > cerebro
   sudo mv cerebro /usr/bin/cerebro
   sudo chmod +x /usr/bin/cerebro
   
   sleep 1
   clear
   echo " "
   echo -e "$BGreen DOWNLOADING NEWEST VERSION... $NC"
   echo " "
   echo -e "$Green [==================>----------] $NC"
   sleep 1
   clear
   echo "  "
   echo -e "$BGreen NEWEST VERSION INSTALLED $NC"
   echo " "
   echo -e "$Green [============DONE=============] $NC"
   sleep 2
   clear
}

# ---------------------------------------------------

function install() {
   sudo echo "#installed" >> $0
   sudo mv $0 /usr/bin/cerebro
   sudo chmod +x /usr/bin/cerebro
}

CAT=$(tail -1 $0)

if [[ $CAT != *#installed* ]]
then
   install
fi

clear

# ---------------------------------------------------------

function REPLIECHECK() {
   echo "  "
   echo -e "$Green Webhook url (example yourwebsite.com). $NC"
   echo -e "$Green This is the website you expect to get a replie on: $NC"
   echo "  "
   
   read WEBHOOK
   
   echo -e "$BGreen Listening for replies..."
   while true
   do
      echo -e "$BGreen ---------------------------------------------- $NC"
      curl -# -socks5-hostname 127.0.0.1:9050 https://"$WEBHOOK"/api/handleSmsReply
      echo -e "$BGreen ---------------------------------------------- $NC"
      sleep 8
   done
}

# --------------------------------------------------------

function SENDSMS() {
   
   echo "  "
   echo -e "$Green Phone: $NC"
   echo "  "
   
   read PHONE
   
   echo "  "
   echo -e "$Green Message: $NC"
   echo "  "
   
   read SMS
   
   echo "  "
   echo -e "$Green Webhook url (example yourwebsite.com). $NC"
   echo -e "$Green Use this option if you wnat to be able to receive a replie: $NC"
   echo "  "
   
   read WEBHOOK
   
   echo "  "
   echo -e "$Green TextBelt API key (use the key textbelt to get 1 free text per day): $NC"
   echo "  "
   
   read INPUTKEY

   SMSRESULT=$(curl -# -X POST -socks5-hostname 127.0.0.1:9050 https://textbelt.com/text --data-urlencode phone="$PHONE" --data-urlencode message="$SMS" -d replyWebhookUrl='https://"$WEBHOOK"/api/handleSmsReply' -d key="$INPUTKEY")
   
   if grep -q true <<<"$SMSRESULT"
   
   then
      QUOTA=$(echo "$SMSRESULT" | jq '.quotaRemaining')
      TEXTID=$(echo "$SMSRESULT" | jq '.textId')
      echo "  "
      echo -e "$BGreen SUCCESS $NC"
      echo "  "
      echo -e "$BGreen TextBelt response: $NC"
      echo "  "
      echo -e "$Green Remaining Quota: $QUOTA $NC"
      echo " "
      echo -e "$Green TextID: $TEXTID $NC"
      echo " "
      echo -e "$BGreen TextBelt response (JSON): $NC"
      echo " "
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo "$SMSRESULT"
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo "  "
      byemsg
   else
      QUOTA=$(echo "$SMSRESULT" | jq '.quotaRemaining')
      ERROR=$(echo "$SMSRESULT" | jq '.error')
      echo "  "
      echo -e "$BRed FAIL $NC"
      echo "  "
      echo -e "$BGreen TextBelt response: $NC"
      echo "  "
      echo -e "$Green Remaining Quota: $QUOTA $NC"
      echo " "
      echo -e "$Green Error: $ERROR $NC"
      echo " "
      echo -e "$BGreen TextBelt response (JSON): $NC"
      echo " "
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo "$SMSRESULT"
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo " "
      byemsg
   fi
}

# ----------------------------------------------------------------------

function SMSCHECK() {
   
   echo "  "
   echo -e "$Green Text ID (example 12589): $NC"
   echo "  "
   
   read TEXTID
   
   STATUSRESULT=$(curl -# -socks5-hostname 127.0.0.1:9050 https://textbelt.com/status/"$TEXTID")
   
   STATUS=$(echo "$STATUSRESULT" | jq '.status')
   
   echo " "
   echo -e "$BGreen TextBelt response: $NC"
   echo " "
   echo -e "$Green Status: $STATUS $NC"
   echo "  "
   echo -e "$BGreen TextBelt response (JSON): $NC"
   echo " "
   echo -e "$BGreen ---------------------------------------------- $NC"
   echo "$STATUSRESULT"
   echo -e "$BGreen ---------------------------------------------- $NC"
   echo "  "
}

# -------------------------------------------------------------------

function QUOTACHECK() {
   
   echo "  "
   echo -e "$Green TextBelt API Key (example abc123): $NC"
   echo "  "
   
   read KEY
   
   STATUSRESULT=$(curl -# -socks5-hostname 127.0.0.1:9050 https://textbelt.com/quota/"$KEY")
   
   QUOTA=$(echo "$STATUSRESULT" | jq '.quotaRemaining')

   echo " "
   echo -e "$BGreen TextBelt response: $NC"
   echo " "
   echo -e "$Green Remaining Quota: $QUOTA $NC"
   echo " "
   echo -e "$BGreen TextBelt response (JSON): $NC"
   echo " "
   echo -e "$BGreen ---------------------------------------------- $NC"
   echo "$STATUSRESULT"
   echo -e "$BGreen ---------------------------------------------- $NC"
   echo "  "
}

# ----------------------------------------------------------------------

function TESTSMS() {
   
   echo "  "
   echo -e "$Green TextBelt API key: $NC"
   echo "  "
   
   read KEY
   
   KEY=$KEY"_test"
   TESTRESULT=$(curl -# -X POST -socks5-hostname 127.0.0.1:9050 https://textbelt.com/text --data-urlencode phone="8999000" --data-urlencode message="hi" -d key="$KEY")
   
   if grep -q true <<<"$TESTRESULT"
   
   then
      QUOTA=$(echo "$TESTRESULT" | jq '.quotaRemaining')
      TEXTID=$(echo "$TESTRESULT" | jq '.textId')
      echo "  "
      echo -e "$BGreen SUCCESS $NC"
      echo "  "
      echo -e "$BGreen TextBelt response: $NC"
      echo "  "
      echo -e "$Green Remaining Quota: $QUOTA $NC"
      echo " "
      echo -e "$Green TextID: $TEXTID $NC"
      echo "  "
      echo -e "$BGreen TextBelt response (JSON): $NC"
      echo " "
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo "$TESTRESULT"
      echo -e "$BGreen ---------------------------------------------- $NC"
      byemsg
   else
      QUOTA=$(echo "$TESTRESULT" | jq '.quotaRemaining')
      ERROR=$(echo "$TESTRESULT" | jq '.error')
      echo "  "
      echo -e "$BRed FAIL $NC"
      echo "  "
      echo -e "$BGreen TextBelt response: $NC"
      echo "  "
      echo -e "$Green Remaining Quota: $QUOTA $NC"
      echo " "
      echo -e "$Green Error: $ERROR $NC"
      echo "  "
      echo -e "$BGreen TextBelt response (JSON): $NC"
      echo " "
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo "$TESTRESULT"
      echo -e "$BGreen ---------------------------------------------- $NC"
      echo " "
      byemsg
   fi
   
}

# ------------------------------------------------------------------

function helpfunction() {
   
   echo "  "
   echo -e "$BGreen Available opions: $NC"
   echo -e " "
   echo -e "$BGreen Show this page: --help $NC"
   echo -e "$BGreen Check text message status: --statuscheck $NC"
   echo -e "$BGreen Send text message: --sendsms $NC"
   echo -e "$BGreen Check if you have remaining quota: --quotacheck $NC"
   echo -e "$BGreen Test if everything is working: --testsms $NC"
   echo -e "$BGreen Wait for replie using webhook: --repliecheck $NC"
   echo -e "$BGreen Update Cerebro: --update $NC"
   echo -e "$BGreen Print version: --version $NC"
   echo " "
   echo -e "$BGreen Look at the source code to find the hidden function. $NC"
   echo -e "$UGreen https://github.com/Da2dalus/CerebroSMS"
   echo "  "
}

# -------------------------------------------------------------

if [ "$1" == "--statuscheck" ]

then
   TOR
   banner
   SMSCHECK
   byemsg

elif [ "$1" == "--repliecheck" ]

then
   TOR
   banner
   REPLIECHECK
   byemsg

elif [ "$1" == "--sendsms" ]

then
   TOR
   banner
   SENDSMS
   byemsg

elif [ "$1" == "--update" ]

then
   TOR
   banner
   update
   byemsg

elif [ "$1" == "--help" ]

then
   helpfunction

elif [ "$1" == "--version" ]
   
   then
      VERSION

elif [ "$1" == "--quotacheck" ]

then
   TOR
   banner
   QUOTACHECK
   byemsg

elif [ "$1" == "--da2dalus" ]

then
   DB

elif [ "$1" == "--testsms" ]

then
   TOR
   banner
   TESTSMS
   byemsg

elif [ $# -le 0 ]

then
   echo " "
   echo -e "$Red No arguments specified! $NC"
   echo -e "$Red Use$NC $BRed--help$NC $Red to display options.$NC"
   echo " "

else
   echo " "
   echo -e "$Red No such argument available!$NC"
   echo -e "$Red Use$NC $BRed--help$NC $Red to display options.$NC"
   echo " "

fi

#                                        )
#  BE CAREFUL NOT TO CONCENTRATE )      ((     (
#    TO MUCH PROFESSOR         (         ))     )
#      OR ELSE...       )       )      //     (
#                  _   (        __    (     ~->>
#           ,-----' |__,_~~___<'__`)-~__--__-~->> <
#           | //  : | -__   ~__ o)____)),__ - '> >-  >
#           | //  : |- \_ \ -\_\ -\ \ \ ~\_  \ ->> - ,  >>
#           | //  : |_~_\ -\__\ \~'\ \ \, \__ . -<-  >>
#           `-----._| `  -__`-- - ~~ -- ` --~> >
#            _/___\_    //)_`//  | ||]
#      _____[_______]_[~~-_ (.L_/  ||
#     [____________________]' `\_,/'/
#       ||| /          |||  ,___,'./
#       ||| \          |||,'______|
#       ||| /          /|| I==||
#       ||| \       __/_||  __||__
#   -----||-/------`-._/||-o--o---o---
#     ~~~~~'
